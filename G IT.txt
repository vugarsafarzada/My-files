There are 3 different work area in local GIT.
	1. Working directory (we gonna working in here)
	2. Staging area (or index area)	
	3. Local Repo

We going to save into < repo > the all files we are working on and all changes we made, create repo on our own computer. 
Even we can thinking that, like the time machine of own project.

COMMANDS:

* pwd = show working directory (print working directory)
* cd = that's like 'go' command, < cd Desktop > we have to go target folder with this command
* git config --global user.name = 'Vugar' = set user name 
* git config --global user.email = 'vuqarsfrzad@gmail.com' = set user email 
* git config --list = show some information
* git init = create repo (repository) folder 
* git status =  that command is most you going to use and it's for show your working status 
* git status -s = for less details
* git add . = that command show to git which folders and files going to follow, (by the way : '.' mean all files and folders).
  When we do this, we moving from working area to staging area so we gonna send all files and folders from here to 'git'.
  Here we go 
* git restore --staged filename.html = if you wanna call back files or folders from git
* git restore filename.html = for undo all changes on filename.html
* git commit = for open VIM editor, if you want to close VIM editor, press ESC and write x! + enter (that's for save and close )
* git commit -m 'add your note for remember' = for send files and folders to 'git'
* git commit -A = for send all changes to staging area 
* git show = if you wanna look last commit
* git log = if you wanna look all commits
* git log --oneline = for less details and for take 7 characters reference code (yellow code)
* git log -p -2 = if you wanna look last 2 commits 
* git log --since=10 minutes = if you wanna look all changes which since 10 minutes 
* git checkout ####### (write reference code to there)= it's time machine :D, back to the time the reference code gave us
* git checkout master - for undo time machine
* git revert ####### = it's for cancel a commit or change
* git reset = this command has 3 options --soft , --mixed and --hard :
  git reset --soft id (id is important, you can find that at 'git log' command)  
  git reset --mixed id 
  git reset --hard id
* clear = just clear console screen
* code . = you can use this , if you wanna open Visual Studio Code 
* touch = for create a new file (exp. touch index.html)
* rm = for remove (remove index.html)
* git rm -r --cached . = it's for delete files which git follow
* ls -al = if you wanna see inside of 'git' folder 
* rm oldname newname = for change name  
* .gitignore = if you wanna don't care some files you can ignore that files at before. For this you have to create a '.gitignore' (touch .gitignore) 
   and you going to write to inside all you want names (exp. index.html, now the git won't care this file) ( IMPORTANT! we must send .gitignore at first before all files to 'git')
   if you wanna ignore all '.txt' you can write => *.txt 
   if you wanna ignore all directory you can write => directory/
* git branch cssbranch = its for create a css branch 
* git branch htmlbranch = its for create a html branch 
* git branch -a = if you wanna look at branches
* git checkout #branchname = its for switch to branches
* git merge cssbranch htmlbranch = if you wanna add every changes from cssbranch and htmlbranch to master (IMPORTANT! first you must be on master branch)
